# Generated by Django 4.2.11 on 2024-04-26 07:27

import django.contrib.auth.models
import django.contrib.auth.validators
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('company', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AddressInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(blank=True, default='', max_length=255)),
                ('city', models.CharField(blank=True, default='', max_length=30)),
                ('state', models.CharField(blank=True, default='', max_length=30)),
                ('pincode', models.IntegerField(default=0)),
                ('country', models.CharField(blank=True, default='', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='CertificateInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(blank=True, default='', max_length=10)),
                ('course_name', models.CharField(blank=True, default='', max_length=50)),
                ('date_issued', models.CharField(blank=True, default='', max_length=50)),
                ('skills', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), blank=True, default=list, size=None)),
                ('url', models.CharField(blank=True, default='', max_length=255)),
                ('description', models.TextField(blank=True, default='', max_length=255)),
                ('certificate_file', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), blank=True, default=list, size=None)),
                ('validity_date', models.CharField(blank=True, default='', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='ContactPreferenceInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prefered_mode', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), blank=True, default=list, size=None)),
                ('date', models.CharField(blank=True, default='', max_length=50)),
                ('time', models.CharField(blank=True, default='', max_length=50)),
                ('time_zone', models.CharField(blank=True, default='', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='ContactUsInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mobile_number', models.CharField(blank=True, default='', max_length=50)),
                ('date', models.CharField(blank=True, default='', max_length=50)),
                ('time', models.CharField(blank=True, default='', max_length=50)),
                ('user', models.CharField(blank=True, default='', max_length=50)),
                ('mode', models.CharField(blank=True, default='', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='ContractsInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(blank=True, default='', max_length=10)),
                ('file', models.CharField(blank=True, default='', max_length=255)),
                ('uplaod_date', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, default='', max_length=255)),
                ('date', models.CharField(blank=True, default='', max_length=20)),
                ('duration', models.CharField(blank=True, default='', max_length=20)),
                ('billing_cycle', models.CharField(blank=True, default='', max_length=100)),
                ('candidate', models.CharField(blank=True, default='', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='EducationInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(blank=True, default='', max_length=10)),
                ('degree', models.CharField(blank=True, default='', max_length=50)),
                ('year_of_graduation', models.CharField(blank=True, default='', max_length=10)),
                ('university_name', models.CharField(blank=True, default='', max_length=50)),
                ('education_level', models.CharField(blank=True, default='', max_length=50)),
                ('cgpa', models.CharField(blank=True, default='', max_length=50)),
                ('study_mode', models.CharField(blank=True, default='', max_length=50)),
                ('upload_file', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), blank=True, default=list, size=None)),
            ],
        ),
        migrations.CreateModel(
            name='HireInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('candidate_id', models.CharField(blank=True, default='', max_length=100)),
                ('company_name', models.CharField(blank=True, default='', max_length=100)),
                ('client_id', models.CharField(blank=True, default='', max_length=100)),
                ('contract_id', models.CharField(blank=True, default='', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='InterviewInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(blank=True, default='', max_length=10)),
                ('date', models.CharField(blank=True, default='', max_length=100)),
                ('candidate', models.CharField(blank=True, default='', max_length=10)),
                ('time', models.CharField(blank=True, default='', max_length=10)),
                ('meeting_url', models.CharField(blank=True, default='', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='KYCInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aadhar_number', models.CharField(default='', max_length=15)),
                ('aadhar_front', models.CharField(blank=True, default='', max_length=255)),
                ('aadhar_back', models.CharField(blank=True, default='', max_length=255)),
                ('pan_number', models.CharField(blank=True, default='', max_length=15)),
                ('pan_front', models.CharField(blank=True, default='', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='NotificationInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(blank=True, default='', max_length=100)),
                ('message', models.CharField(blank=True, default='', max_length=255)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(blank=True, default='', max_length=100)),
                ('on_type', models.CharField(blank=True, default='', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='PassportInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('passport_number', models.CharField(blank=True, default='', max_length=15)),
                ('passport_validity', models.CharField(blank=True, default='', max_length=100)),
                ('country_of_citizenship', models.CharField(blank=True, default='', max_length=100)),
                ('country_of_issue', models.CharField(blank=True, default='', max_length=100)),
                ('passport_front', models.CharField(blank=True, default='', max_length=255)),
                ('passport_back', models.CharField(blank=True, default='', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Preference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qualification', models.CharField(default='', max_length=100, null=True)),
                ('year_of_experience', models.IntegerField(default=0)),
                ('skills', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), blank=True, default=list, size=None)),
                ('linkedin', models.CharField(default='', max_length=255)),
                ('hackerrank', models.CharField(blank=True, default='', max_length=255)),
                ('github', models.CharField(blank=True, default='', max_length=255)),
                ('personal_website', models.CharField(blank=True, default='', max_length=255)),
                ('language', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), blank=True, default=list, size=None)),
            ],
        ),
        migrations.CreateModel(
            name='PricingInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(blank=True, default='', max_length=64)),
                ('pricing_plan', models.CharField(blank=True, default='', max_length=64)),
                ('plan_validity', models.CharField(blank=True, default='', max_length=64)),
                ('plan_price', models.CharField(blank=True, default='', max_length=64)),
                ('plan_duration', models.CharField(blank=True, default='', max_length=64)),
                ('plan_start', models.DateTimeField(auto_now_add=True)),
                ('plan_status', models.CharField(blank=True, default='', max_length=64)),
                ('invoice_url', models.CharField(blank=True, default='', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='ProfessionalDetailsInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(blank=True, default='', max_length=10)),
                ('title', models.CharField(blank=True, default='', max_length=100)),
                ('years_active', models.CharField(blank=True, default='', max_length=100)),
                ('company_name', models.CharField(blank=True, default='', max_length=100)),
                ('skills', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), blank=True, default=list, size=None)),
                ('location', models.CharField(blank=True, default='', max_length=100)),
                ('description', models.TextField(blank=True, default='')),
                ('annual_salary', models.CharField(blank=True, default='', max_length=100)),
                ('currency', models.CharField(blank=True, default='', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectDetailsInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(blank=True, default='', max_length=10)),
                ('project_title', models.CharField(blank=True, default='', max_length=50)),
                ('role', models.CharField(blank=True, default='', max_length=50)),
                ('reporting_to', models.CharField(blank=True, default='', max_length=50)),
                ('duration_of_project', models.CharField(blank=True, default='', max_length=50)),
                ('skills', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), blank=True, default=list, size=None)),
                ('description', models.TextField(blank=True, default='')),
            ],
        ),
        migrations.CreateModel(
            name='RateCardInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('remote_hourly', models.CharField(blank=True, default='', max_length=50)),
                ('remote_monthly', models.CharField(blank=True, default='', max_length=50)),
                ('remote_annualy', models.CharField(blank=True, default='', max_length=50)),
                ('onsite_hourly', models.CharField(blank=True, default='', max_length=50)),
                ('onsite_monthly', models.CharField(blank=True, default='', max_length=50)),
                ('onsite_annualy', models.CharField(blank=True, default='', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='RequirementsInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('looking_for', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), blank=True, default=list, size=None)),
                ('duration', models.CharField(blank=True, default='', max_length=20)),
                ('skills', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), blank=True, default=list, size=None)),
                ('budget', models.CharField(blank=True, default='', max_length=20)),
                ('currency', models.CharField(blank=True, default='', max_length=20)),
                ('location', models.CharField(blank=True, default='', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='TeamMembersInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=50)),
                ('email_id', models.CharField(blank=True, default='', max_length=255)),
                ('level_of_access', models.CharField(blank=True, max_length=255)),
                ('status', models.CharField(blank=True, default='', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='TravelInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('travelled_to', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), blank=True, default=list, size=None)),
                ('travel_to_for_work', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, default=list, max_length=200), size=None)),
                ('relocate_for_work', models.CharField(blank=True, default='', max_length=255)),
                ('willingness', models.CharField(blank=True, default='', max_length=255)),
                ('duration', models.CharField(blank=True, default='', max_length=50)),
                ('prefered_countries', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), blank=True, default=list, null=True, size=None)),
            ],
        ),
        migrations.CreateModel(
            name='WorkExperienceInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key_skills', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), blank=True, default=list, size=None)),
                ('current_employment_status', models.CharField(blank=True, default='', max_length=50)),
                ('preferred_mode_of_engagement', models.CharField(blank=True, default='', max_length=50)),
                ('preferred_method_of_work', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), blank=True, default=list, size=None)),
                ('preffered_work_location', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), blank=True, default=list, size=None)),
                ('preffered_work_timings', models.CharField(blank=True, default='', max_length=50)),
                ('language', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), blank=True, default=list, size=None)),
                ('website_url', models.CharField(blank=True, default='', max_length=255)),
                ('hackerrank_url', models.CharField(blank=True, default='', max_length=255)),
                ('github_url', models.CharField(blank=True, default='', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='StaffUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone', models.CharField(blank=True, default='', max_length=15)),
                ('linked_in', models.CharField(blank=True, default='', max_length=255)),
                ('role', models.CharField(blank=True, default='', max_length=10)),
                ('email_verification', models.BooleanField(default=False)),
                ('mobile_verification', models.BooleanField(default=False)),
                ('current_place_of_residence', models.CharField(blank=True, default='', max_length=200)),
                ('date_of_birth', models.CharField(blank=True, default='', max_length=20)),
                ('video_resume', models.CharField(blank=True, default='', max_length=255)),
                ('gender', models.CharField(blank=True, default='', max_length=10)),
                ('profile_picture', models.CharField(blank=True, default='', max_length=255)),
                ('lived_at_current_residence', models.CharField(blank=True, default='', max_length=200)),
                ('recently_visited', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True, null=True), blank=True, default=list, size=None)),
                ('onboarding_status', models.CharField(blank=True, default=1, max_length=2)),
                ('status', models.CharField(blank=True, default='', max_length=255)),
                ('apprual', models.BooleanField(default=False)),
                ('employee_id', models.CharField(blank=True, default='', max_length=255)),
                ('dissabled', models.BooleanField(default=False)),
                ('hired_status', models.CharField(blank=True, default='', max_length=255)),
                ('bio', models.CharField(blank=True, default='', max_length=500)),
                ('part_time_availability', models.CharField(blank=True, default='', max_length=100)),
                ('nottify', models.BooleanField(default=False)),
                ('background_verification', models.CharField(blank=True, default='', max_length=255)),
                ('personality_assessment', models.CharField(blank=True, default='', max_length=255)),
                ('otp', models.CharField(blank=True, default='', max_length=6, null=True)),
                ('interview_status', models.CharField(blank=True, default=False, max_length=6, null=True)),
                ('fresher', models.CharField(blank=True, default=False, max_length=6, null=True)),
                ('mr', models.CharField(blank=True, default='', max_length=5, null=True)),
                ('mrs', models.CharField(blank=True, default='', max_length=5, null=True)),
                ('address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='staff.addressinfo')),
                ('certificate_info', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='staff.certificateinfo')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='staff_users', to='company.companyinfo')),
                ('contact_preference_info', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='staff.contactpreferenceinfo')),
                ('contracts_info', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='staff.contractsinfo')),
                ('education_info', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='staff.educationinfo')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('hire_info', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='staff.hireinfo')),
                ('interview_info', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='staff.interviewinfo')),
                ('kyc_info', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='staff.kycinfo')),
                ('passport_info', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='staff.passportinfo')),
                ('preference_info', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='staff.preference')),
                ('pricing_info', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='staff.pricinginfo')),
                ('professional_details_info', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='staff.professionaldetailsinfo')),
                ('project_details_info', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='staff.projectdetailsinfo')),
                ('rate_card_info', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='staff.ratecardinfo')),
                ('requirements_info', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='staff.requirementsinfo')),
                ('team_members_info', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='staff.teammembersinfo')),
                ('travel_info', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='staff.travelinfo')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('work_preference_info', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='staff.workexperienceinfo')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
